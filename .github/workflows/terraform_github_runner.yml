name: Terraform GitHub Runner Workflow

on:
  workflow_dispatch:  # Trigger workflow only on manual dispatch

    inputs:  # Define inputs under the workflow_dispatch event
      apply:
        description: "Terraform apply Option"
        default: "No"
        required: true

jobs:
  terraform:
    name: Terraform Execution
    runs-on: ubuntu-latest  # Or self-hosted, if applicable

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Setup Terraform (This will setup terraform in github runner)
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7  # Specify the desired Terraform version

      # Step 3: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1  # Replace with your AWS region

      # Step 4: Initialize Terraform
      - name: Terraform Init
        working-directory: ./terraform  # Our terraform files is inside terraform folder
        run: terraform init

      # Step 5: Validate Terraform files
      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      # Step 6: Terraform Plan
      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -out=tfplan

      # Step 7: Terraform Apply (manual trigger only)
      - name: Terraform Apply
        if: github.event.inputs.apply == 'Yes'  # Adds a conditional manual apply option
        working-directory: ./terraform
        run: terraform apply -auto-approve tfplan
